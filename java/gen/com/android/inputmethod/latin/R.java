/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.inputmethod.latin;

public final class R {
    public static final class array {
        /**  Array of prediction modes 
         */
        public static final int prediction_modes=0x7f0b0000;
        public static final int prediction_modes_values=0x7f0b0001;
        /**  Array of Voice Input modes 
         */
        public static final int voice_input_modes=0x7f0b0002;
        /**  Array of Voice Input modes summary 
         */
        public static final int voice_input_modes_summary=0x7f0b0004;
        public static final int voice_input_modes_values=0x7f0b0003;
    }
    public static final class attr {
    }
    public static final class bool {
        /**  Whether or not auto-correction should be enabled by default 
         */
        public static final int enable_autocorrect=0x7f060000;
        /**  Whether this input method should be used as the default for a locale. Override it
         for latin languages. 
         */
        public static final int im_is_default=0x7f060001;
        /**  Whether or not voice input is enabled by default. 
         */
        public static final int voice_input_default=0x7f060002;
    }
    public static final class color {
        public static final int candidate_normal=0x7f070000;
        public static final int candidate_other=0x7f070002;
        public static final int candidate_recommended=0x7f070001;
    }
    public static final class dimen {
        public static final int bubble_pointer_offset=0x7f080001;
        public static final int candidate_strip_height=0x7f080002;
        public static final int key_height=0x7f080000;
        public static final int spacebar_vertical_correction=0x7f080003;
    }
    public static final class drawable {
        public static final int btn_keyboard_key=0x7f020000;
        public static final int btn_keyboard_key_fulltrans=0x7f020001;
        public static final int btn_keyboard_key_fulltrans_normal=0x7f020002;
        public static final int btn_keyboard_key_fulltrans_pressed=0x7f020003;
        public static final int btn_keyboard_key_normal=0x7f020004;
        public static final int btn_keyboard_key_normal_off=0x7f020005;
        public static final int btn_keyboard_key_normal_on=0x7f020006;
        public static final int btn_keyboard_key_pressed=0x7f020007;
        public static final int btn_keyboard_key_pressed_off=0x7f020008;
        public static final int btn_keyboard_key_pressed_on=0x7f020009;
        public static final int cancel=0x7f02000a;
        public static final int candidate_feedback_background=0x7f02000b;
        public static final int caution=0x7f02000c;
        public static final int dialog_bubble_step02=0x7f02000d;
        public static final int dialog_bubble_step07=0x7f02000e;
        public static final int dialog_top_dark_bottom_medium=0x7f02000f;
        public static final int highlight_pressed=0x7f020010;
        public static final int ic_dialog_alert_large=0x7f020011;
        public static final int ic_dialog_keyboard=0x7f020012;
        public static final int ic_dialog_voice_input=0x7f020013;
        public static final int ic_dialog_wave_0_0=0x7f020014;
        public static final int ic_dialog_wave_1_3=0x7f020015;
        public static final int ic_dialog_wave_2_3=0x7f020016;
        public static final int ic_dialog_wave_3_3=0x7f020017;
        public static final int ic_dialog_wave_4_3=0x7f020018;
        public static final int ic_mic_dialog=0x7f020019;
        public static final int ic_suggest_scroll_background=0x7f02001a;
        public static final int ic_suggest_strip_microphone=0x7f02001b;
        public static final int ic_suggest_strip_microphone_swipe=0x7f02001c;
        public static final int ic_suggest_strip_scroll_left_arrow=0x7f02001d;
        public static final int ic_suggest_strip_scroll_right_arrow=0x7f02001e;
        public static final int keyboard_background=0x7f02001f;
        public static final int keyboard_suggest_strip=0x7f020020;
        public static final int keyboard_suggest_strip_divider=0x7f020021;
        public static final int list_selector_background_pressed=0x7f020022;
        public static final int mic_slash=0x7f020023;
        public static final int ok_cancel=0x7f020024;
        public static final int speak_now_level0=0x7f020025;
        public static final int speak_now_level1=0x7f020026;
        public static final int speak_now_level2=0x7f020027;
        public static final int speak_now_level3=0x7f020028;
        public static final int speak_now_level4=0x7f020029;
        public static final int speak_now_level5=0x7f02002a;
        public static final int speak_now_level6=0x7f02002b;
        public static final int sym_keyboard_123_mic=0x7f02002c;
        public static final int sym_keyboard_delete=0x7f02002d;
        public static final int sym_keyboard_done=0x7f02002e;
        public static final int sym_keyboard_feedback_123_mic=0x7f02002f;
        public static final int sym_keyboard_feedback_delete=0x7f020030;
        public static final int sym_keyboard_feedback_done=0x7f020031;
        public static final int sym_keyboard_feedback_language_arrows_left=0x7f020032;
        public static final int sym_keyboard_feedback_language_arrows_right=0x7f020033;
        public static final int sym_keyboard_feedback_mic=0x7f020034;
        public static final int sym_keyboard_feedback_numalt=0x7f020035;
        public static final int sym_keyboard_feedback_return=0x7f020036;
        public static final int sym_keyboard_feedback_search=0x7f020037;
        public static final int sym_keyboard_feedback_shift=0x7f020038;
        public static final int sym_keyboard_feedback_shift_locked=0x7f020039;
        public static final int sym_keyboard_feedback_space=0x7f02003a;
        public static final int sym_keyboard_feedback_tab=0x7f02003b;
        public static final int sym_keyboard_feedback_tabprev=0x7f02003c;
        public static final int sym_keyboard_globe=0x7f02003d;
        public static final int sym_keyboard_language_arrows_left=0x7f02003e;
        public static final int sym_keyboard_language_arrows_right=0x7f02003f;
        public static final int sym_keyboard_mic=0x7f020040;
        public static final int sym_keyboard_num0=0x7f020041;
        public static final int sym_keyboard_num1=0x7f020042;
        public static final int sym_keyboard_num2=0x7f020043;
        public static final int sym_keyboard_num3=0x7f020044;
        public static final int sym_keyboard_num4=0x7f020045;
        public static final int sym_keyboard_num5=0x7f020046;
        public static final int sym_keyboard_num6=0x7f020047;
        public static final int sym_keyboard_num7=0x7f020048;
        public static final int sym_keyboard_num8=0x7f020049;
        public static final int sym_keyboard_num9=0x7f02004a;
        public static final int sym_keyboard_numalt=0x7f02004b;
        public static final int sym_keyboard_numpound=0x7f02004c;
        public static final int sym_keyboard_numstar=0x7f02004d;
        public static final int sym_keyboard_return=0x7f02004e;
        public static final int sym_keyboard_search=0x7f02004f;
        public static final int sym_keyboard_shift=0x7f020050;
        public static final int sym_keyboard_shift_locked=0x7f020051;
        public static final int sym_keyboard_space=0x7f020052;
        public static final int sym_keyboard_tab=0x7f020053;
        public static final int sym_keyboard_tabprev=0x7f020054;
        public static final int voice_ime_background=0x7f020055;
        public static final int voice_swipe_hint=0x7f020056;
        public static final int working=0x7f020057;
    }
    public static final class id {
        public static final int button=0x7f0c0009;
        public static final int button_text=0x7f0c000a;
        public static final int candidate_left=0x7f0c0001;
        public static final int candidate_left_parent=0x7f0c0000;
        public static final int candidate_right=0x7f0c0004;
        public static final int candidate_right_parent=0x7f0c0003;
        public static final int candidates=0x7f0c0002;
        public static final int image=0x7f0c0007;
        public static final int main_image=0x7f0c0005;
        public static final int mode_email=0x7f0c000d;
        public static final int mode_im=0x7f0c000e;
        public static final int mode_normal=0x7f0c000b;
        public static final int mode_url=0x7f0c000c;
        public static final int mode_webentry=0x7f0c000f;
        public static final int progress=0x7f0c0008;
        public static final int text=0x7f0c0006;
    }
    public static final class integer {
        /**  Keycode for F1 (function) key. This one switches between language switch & comma/.com 
         */
        public static final int key_f1=0x7f0a0001;
        /**  Vibration duration in milliseconds, for key presses in the IME. This can be hardware
        dependent and may require overriding with a device specific overlay. 
         */
        public static final int vibrate_duration_ms=0x7f0a0000;
    }
    public static final class layout {
        public static final int bubble_text=0x7f030000;
        public static final int candidate_preview=0x7f030001;
        public static final int candidates=0x7f030002;
        public static final int input=0x7f030003;
        public static final int input_trans=0x7f030004;
        public static final int recognition_status=0x7f030005;
        public static final int voice_punctuation_hint=0x7f030006;
        public static final int voice_swipe_hint=0x7f030007;
    }
    public static final class raw {
        public static final int main=0x7f050000;
        public static final int type3=0x7f050001;
    }
    public static final class string {
        /**  Indicates that a word has been added to the dictionary 
         */
        public static final int added_word=0x7f090026;
        /**  Accented forms of "a" 
         */
        public static final int alternates_for_a=0x7f090027;
        /**  Accented forms of "c" 
         */
        public static final int alternates_for_c=0x7f09002e;
        /**  Accented characters related to "d" 
 Accented characters related to "d" 
         */
        public static final int alternates_for_d=0x7f090003;
        /**  Accented forms of "e" 
         */
        public static final int alternates_for_e=0x7f090028;
        /**  Accented characters related to "g" 
 Accented characters related to "g" 
         */
        public static final int alternates_for_g=0x7f090008;
        /**  Accented forms of "i" 
         */
        public static final int alternates_for_i=0x7f090029;
        /**  Accented characters related to "l" 
 Accented characters related to "l" 
         */
        public static final int alternates_for_l=0x7f090007;
        /**  Accented forms of "n" 
         */
        public static final int alternates_for_n=0x7f09002d;
        /**  Accented forms of "o" 
         */
        public static final int alternates_for_o=0x7f09002a;
        /**  Accented characters related to "r" 
 Accented characters related to "r" 
         */
        public static final int alternates_for_r=0x7f090004;
        /**  Letters associated with "s" 
         */
        public static final int alternates_for_s=0x7f09002c;
        /**  Accented characters related to "t" 
 Accented characters related to "t" 
         */
        public static final int alternates_for_t=0x7f090005;
        /**  Accented forms of "u" 
         */
        public static final int alternates_for_u=0x7f09002b;
        /**  Accented forms of "y" 
         */
        public static final int alternates_for_y=0x7f09002f;
        /**  Accented characters related to "z" 
 Accented characters related to "z" 
 Accented characters related to "z" 
         */
        public static final int alternates_for_z=0x7f090006;
        /**  Option to enable auto capitalization of sentences 
         */
        public static final int auto_cap=0x7f090019;
        /**  Description for auto cap 
         */
        public static final int auto_cap_summary=0x7f09001a;
        /**  Option to enable auto completion 
         */
        public static final int auto_complete=0x7f090021;
        /**  Dialog title for auto complete choices 
         */
        public static final int auto_complete_dialog_title=0x7f090016;
        /**  Description for auto completion 
         */
        public static final int auto_complete_summary=0x7f090022;
        /**  Option to automatically correct word on hitting space 
         */
        public static final int auto_correction=0x7f090011;
        /**  Description for auto_correction 
         */
        public static final int auto_correction_summary=0x7f090012;
        /**  Option to enable auto punctuate 
         */
        public static final int auto_punctuate=0x7f09001b;
        /**  Description for auto punctuate 
         */
        public static final int auto_punctuate_summary=0x7f09001c;
        /**  Press the "enter" key after the user speaks. Option on settings.
         */
        public static final int auto_submit=0x7f09005c;
        /**  Press the "enter" key after the user speaks. Summary of option in settings.
         */
        public static final int auto_submit_summary=0x7f09005d;
        /**  Label on button to stop recognition. Must be short to fit on button. 
         */
        public static final int cancel=0x7f090056;
        /**  appears above the image showing the back button used to close the keyboard 
         */
        public static final int close_the_keyboard=0x7f09005f;
        /**  Title for Latin keyboard  
         */
        public static final int english_ime_name=0x7f090009;
        /**  Title for Latin keyboard settings activity / dialog 
         */
        public static final int english_ime_settings=0x7f09000a;
        /**  Inform the user that a particular language has an available dictionary 
         */
        public static final int has_dictionary=0x7f09006b;
        /**  Add to dictionary hint 
         */
        public static final int hint_add_to_dictionary=0x7f09006a;
        /**  Option to enable using nearby keys when correcting/predicting 
         */
        public static final int hit_correction=0x7f09000d;
        /**  Option to enable using nearby keys when correcting/predicting in landscape
         */
        public static final int hit_correction_land=0x7f09000f;
        /**  Description for hit_correction in landscape 
         */
        public static final int hit_correction_land_summary=0x7f090010;
        /**  Description for hit_correction  
         */
        public static final int hit_correction_summary=0x7f09000e;
        /**  Menu item for launching Input method switcher 
         */
        public static final int inputMethod=0x7f090067;
        /**  appears above image showing how to access keyboard settings 
         */
        public static final int keyboard_settings=0x7f090061;
        /**  Label for "switch to alphabetic" key.  Must be short to fit on key! 
         */
        public static final int label_alpha_key=0x7f090042;
        /**  Label for ALT modifier key.  Must be short to fit on key! 
         */
        public static final int label_alt_key=0x7f090043;
        /**  Label for soft enter key when it performs DONE action.  Must be short to fit on key! 
         */
        public static final int label_done_key=0x7f09003e;
        /**  Label for soft enter key when it performs GO action.  Must be short to fit on key! 
         */
        public static final int label_go_key=0x7f09003c;
        /**  Label for soft enter key when it performs NEXT action.  Must be short to fit on key! 
         */
        public static final int label_next_key=0x7f09003d;
        /**  Label for "switch to numeric" key.  Must be short to fit on key! 
         */
        public static final int label_phone_key=0x7f090041;
        /**  Label for soft enter key when it performs SEND action.  Must be short to fit on key! 
         */
        public static final int label_send_key=0x7f09003f;
        /**  Label for "switch to symbols" key.  Must be short to fit on key! 
         */
        public static final int label_symbol_key=0x7f090040;
        /**  Title summary for input language selection screen 
         */
        public static final int language_selection_summary=0x7f090069;
        /**  Title for input language selection screen 
         */
        public static final int language_selection_title=0x7f090068;
        /**  Label on button when an error occurs 
         */
        public static final int ok=0x7f090057;
        /**  appears above image showing the user to click on a TextView to show the IME 
         */
        public static final int open_the_keyboard=0x7f09005e;
        /**  popular web domains for the locale - most popular, displayed on the keyboard 
         */
        public static final int popular_domain_0=0x7f090062;
        /**  popular web domains for the locale - item 1, displayed in the popup 
         */
        public static final int popular_domain_1=0x7f090063;
        /**  popular web domains for the locale - item 2, displayed in the popup 
         */
        public static final int popular_domain_2=0x7f090064;
        /**  popular web domains for the locale - item 3, displayed in the popup 
         */
        public static final int popular_domain_3=0x7f090065;
        /**  popular web domains for the locale - item 4, displayed in the popup 
         */
        public static final int popular_domain_4=0x7f090066;
        /**  Option to enable text prediction 
         */
        public static final int prediction=0x7f090013;
        /**  Don't translate 
         */
        public static final int prediction_basic=0x7f090024;
        /**  Category title for text prediction 
         */
        public static final int prediction_category=0x7f090014;
        /**  Don't translate 
         */
        public static final int prediction_full=0x7f090025;
        /**  Option to enable text prediction in landscape 
         */
        public static final int prediction_landscape=0x7f090017;
        /**  Description for text prediction 
         */
        public static final int prediction_landscape_summary=0x7f090018;
        /**  Don't translate 
         */
        public static final int prediction_none=0x7f090023;
        /**  Description for text prediction 
         */
        public static final int prediction_summary=0x7f090015;
        /**  Option to enable quick fixes 
         */
        public static final int quick_fixes=0x7f09001d;
        /**  Description for quick fixes 
         */
        public static final int quick_fixes_summary=0x7f09001e;
        /**  Symbols that are sentence separators, for purposes of making it hug the last sentence. 
 Symbols that are sentence separators, for purposes of making it hug the last sentence. 
         */
        public static final int sentence_separators=0x7f090001;
        /**  Option to enable showing suggestions 
         */
        public static final int show_suggestions=0x7f09001f;
        /**  Description for show suggestions 
         */
        public static final int show_suggestions_summary=0x7f090020;
        /**  Option to play back sound on keypress in soft keyboard 
         */
        public static final int sound_on_keypress=0x7f09000c;
        /**  Symbols that are suggested between words 
         */
        public static final int suggested_punctuations=0x7f090002;
        /**  Tip to press ?123 to access numbers and symbols 
         */
        public static final int tip_access_symbols=0x7f090032;
        /**  Tip to long press on typed word to add to dictionary 
         */
        public static final int tip_add_to_dictionary=0x7f090033;
        /**  Tip to dismiss keyboard 
         */
        public static final int tip_dismiss=0x7f090031;
        /**  Tip to long press on keys 
         */
        public static final int tip_long_press=0x7f090030;
        /**  Tutorial tip 4 - How to switch back to alphabet keyboard 
         */
        public static final int tip_to_close_symbols=0x7f090039;
        /**  Tutorial tip 5 - How to launch keyboard settings 
         */
        public static final int tip_to_launch_settings=0x7f09003a;
        /**  Tutorial tip 1 - The keyboard opens any time you touch a text field 
         */
        public static final int tip_to_open_keyboard=0x7f090036;
        /**  Tutorial tip 3 - How to switch to number/symbol keyboard 
         */
        public static final int tip_to_open_symbols=0x7f090038;
        /**  Tutorial tip 6 - Done with the tutorial 
         */
        public static final int tip_to_start_typing=0x7f09003b;
        /**  Tutorial tip 2 - Touch and hold a key to view accents (examples) 
         */
        public static final int tip_to_view_accents=0x7f090037;
        /**  appears above image showing how to use touch and hold 
         */
        public static final int touch_and_hold=0x7f090060;
        /**  Instruction to touch the bubble to continue 
         */
        public static final int touch_to_continue=0x7f090034;
        /**  Instruction to touch the bubble to start typing 
         */
        public static final int touch_to_finish=0x7f090035;
        /**  Option to provide vibrate/haptic feedback on keypress 
         */
        public static final int vibrate_on_keypress=0x7f09000b;
        /**  Short message shown for an audio error. 
         */
        public static final int voice_audio_error=0x7f09004f;
        /**  Short message shown when a generic error occurs. 
         */
        public static final int voice_error=0x7f09004c;
        /**  Message to show when user clicks the swiping hint (which says
        "Swipe across keyboard to speak"). Also shown when enabling settings. 
         */
        public static final int voice_hint_dialog_message=0x7f090048;
        /**  Short message shown before the user should speak. 
         */
        public static final int voice_initializing=0x7f09004b;
        /**  Preferences item for enabling speech input 
         */
        public static final int voice_input=0x7f090058;
        /**  Short message to tell the user the system is ready for them to speak. 
         */
        public static final int voice_listening=0x7f090049;
        /**  Don't translate 
         */
        public static final int voice_mode_main=0x7f090059;
        /**  Don't translate 
         */
        public static final int voice_mode_off=0x7f09005b;
        /**  Don't translate 
         */
        public static final int voice_mode_symbols=0x7f09005a;
        /**  Short message shown for a network error. 
         */
        public static final int voice_network_error=0x7f09004d;
        /**  Short message shown when the server couldn't parse any speech. 
         */
        public static final int voice_no_match=0x7f090052;
        /**  Short message shown when the user initiates voice and voice
	search is not installed. 
         */
        public static final int voice_not_installed=0x7f090053;
        /**  Short hint shown in candidate view to explain that user can speak punctuation. 
         */
        public static final int voice_punctuation_hint=0x7f090055;
        /**  Short message shown for an error with the voice server. 
         */
        public static final int voice_server_error=0x7f090050;
        /**  Short message shown when no speech is heard. 
         */
        public static final int voice_speech_timeout=0x7f090051;
        /**  Short hint shown in candidate view to explain voice input. 
         */
        public static final int voice_swipe_hint=0x7f090054;
        /**  Short message shown for a network error where the utterance was really long,
         in which case we should suggest that the user speak less. 
         */
        public static final int voice_too_much_speech=0x7f09004e;
        /**  An additional part of the warning dialog for voice input that only shows when the user
         actually initiates voice input, rather than just turning it on in settings. 
         */
        public static final int voice_warning_how_to_turn_off=0x7f090047;
        /**  Message that gets put at the top of the warning dialog if the user is attempting to use
         voice input in a currently unsupported locale. Voice input will work for such a user,
         but it will only recognize them in English. 
         */
        public static final int voice_warning_locale_not_supported=0x7f090045;
        /**  Message of the warning dialog that shows when a user initiates voice input for
         the first time, or turns it on in settings. 
         */
        public static final int voice_warning_may_not_understand=0x7f090046;
        /**  Voice related labels 
 Title of the warning dialog that shows when a user initiates voice input for
         the first time. 
         */
        public static final int voice_warning_title=0x7f090044;
        /**  Short message shown after the user finishes speaking. 
         */
        public static final int voice_working=0x7f09004a;
        /**  Symbols that are commonly considered word separators in this language 
 Symbols that are commonly considered word separators in this language 
 Symbols that are commonly considered word separators in this language 
         */
        public static final int word_separators=0x7f090000;
    }
    public static final class xml {
        public static final int azerty=0x7f040000;
        public static final int kbd_alpha=0x7f040001;
        public static final int kbd_extension=0x7f040002;
        public static final int kbd_phone=0x7f040003;
        public static final int kbd_phone_symbols=0x7f040004;
        public static final int kbd_popup_template=0x7f040005;
        public static final int kbd_qwerty=0x7f040006;
        public static final int kbd_symbols=0x7f040007;
        public static final int kbd_symbols_shift=0x7f040008;
        public static final int language_prefs=0x7f040009;
        public static final int method=0x7f04000a;
        public static final int popup_domains=0x7f04000b;
        public static final int popup_punctuation=0x7f04000c;
        public static final int popup_smileys=0x7f04000d;
        public static final int prefs=0x7f04000e;
    }
}
